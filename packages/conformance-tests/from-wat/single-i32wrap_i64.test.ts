import type { Expect, Equal } from 'type-testing';
import type { entry } from './single-i32wrap_i64.actual'
import { t, T, Ops } from '../../ts-type-math/test-cases/wrap'

import { test, expect } from 'vitest';
import { getWasm } from '../utils'

test.each(t)('wrap($a) === $wrap', async ({ a, wrap }) => {
  const entry = await getWasm<Ops['wrap']>("from-wat", 'single-i32wrap_i64');
  expect(entry(a)).toStrictEqual(wrap);
});

type i = 0
type a = T[i]['a']   // =>
type w = T[i]['wrap']// =>
type x = entry<[a]>  // =>

// so.  it's half a million type instantiations to run this single file.  they do all pass, but like.  it's a lot.
// so most of them are commented because typescript literally can't do that

type tests = [
  Expect<Equal<entry<[T[  0]['a']]>, T[  0]['wrap']>>,
  Expect<Equal<entry<[T[  1]['a']]>, T[  1]['wrap']>>,
  Expect<Equal<entry<[T[  2]['a']]>, T[  2]['wrap']>>,
  Expect<Equal<entry<[T[  3]['a']]>, T[  3]['wrap']>>,
  Expect<Equal<entry<[T[  4]['a']]>, T[  4]['wrap']>>,
  Expect<Equal<entry<[T[  5]['a']]>, T[  5]['wrap']>>,
  Expect<Equal<entry<[T[  6]['a']]>, T[  6]['wrap']>>,
  Expect<Equal<entry<[T[  7]['a']]>, T[  7]['wrap']>>,
  Expect<Equal<entry<[T[  8]['a']]>, T[  8]['wrap']>>,
  // Expect<Equal<entry<[T[  9]['a']]>, T[  9]['wrap']>>,
  // Expect<Equal<entry<[T[ 10]['a']]>, T[ 10]['wrap']>>,
  // Expect<Equal<entry<[T[ 11]['a']]>, T[ 11]['wrap']>>,
  // Expect<Equal<entry<[T[ 12]['a']]>, T[ 12]['wrap']>>,
  // Expect<Equal<entry<[T[ 13]['a']]>, T[ 13]['wrap']>>,
  // Expect<Equal<entry<[T[ 14]['a']]>, T[ 14]['wrap']>>,
  // Expect<Equal<entry<[T[ 15]['a']]>, T[ 15]['wrap']>>,
  // Expect<Equal<entry<[T[ 16]['a']]>, T[ 16]['wrap']>>,
  // Expect<Equal<entry<[T[ 17]['a']]>, T[ 17]['wrap']>>,
  // Expect<Equal<entry<[T[ 18]['a']]>, T[ 18]['wrap']>>,
  // Expect<Equal<entry<[T[ 19]['a']]>, T[ 19]['wrap']>>,
  // Expect<Equal<entry<[T[ 20]['a']]>, T[ 20]['wrap']>>,
  // Expect<Equal<entry<[T[ 21]['a']]>, T[ 21]['wrap']>>,
  // Expect<Equal<entry<[T[ 22]['a']]>, T[ 22]['wrap']>>,
  // Expect<Equal<entry<[T[ 23]['a']]>, T[ 23]['wrap']>>,
  // Expect<Equal<entry<[T[ 24]['a']]>, T[ 24]['wrap']>>,
  // Expect<Equal<entry<[T[ 25]['a']]>, T[ 25]['wrap']>>,
  // Expect<Equal<entry<[T[ 26]['a']]>, T[ 26]['wrap']>>,
  // Expect<Equal<entry<[T[ 27]['a']]>, T[ 27]['wrap']>>,
  // Expect<Equal<entry<[T[ 28]['a']]>, T[ 28]['wrap']>>,
  // Expect<Equal<entry<[T[ 29]['a']]>, T[ 29]['wrap']>>,
  // Expect<Equal<entry<[T[ 30]['a']]>, T[ 30]['wrap']>>,
  // Expect<Equal<entry<[T[ 31]['a']]>, T[ 31]['wrap']>>,
  // Expect<Equal<entry<[T[ 32]['a']]>, T[ 32]['wrap']>>,
  // Expect<Equal<entry<[T[ 33]['a']]>, T[ 33]['wrap']>>,
  // Expect<Equal<entry<[T[ 34]['a']]>, T[ 34]['wrap']>>,
  // Expect<Equal<entry<[T[ 35]['a']]>, T[ 35]['wrap']>>,
  // Expect<Equal<entry<[T[ 36]['a']]>, T[ 36]['wrap']>>,
  // Expect<Equal<entry<[T[ 37]['a']]>, T[ 37]['wrap']>>,
  // Expect<Equal<entry<[T[ 38]['a']]>, T[ 38]['wrap']>>,
  // Expect<Equal<entry<[T[ 39]['a']]>, T[ 39]['wrap']>>,
  // Expect<Equal<entry<[T[ 40]['a']]>, T[ 40]['wrap']>>,
  // Expect<Equal<entry<[T[ 41]['a']]>, T[ 41]['wrap']>>,
  // Expect<Equal<entry<[T[ 42]['a']]>, T[ 42]['wrap']>>,
  // Expect<Equal<entry<[T[ 43]['a']]>, T[ 43]['wrap']>>,
  // Expect<Equal<entry<[T[ 44]['a']]>, T[ 44]['wrap']>>,
  // Expect<Equal<entry<[T[ 45]['a']]>, T[ 45]['wrap']>>,
  // Expect<Equal<entry<[T[ 46]['a']]>, T[ 46]['wrap']>>,
  // Expect<Equal<entry<[T[ 47]['a']]>, T[ 47]['wrap']>>,
  // Expect<Equal<entry<[T[ 48]['a']]>, T[ 48]['wrap']>>,
  // Expect<Equal<entry<[T[ 49]['a']]>, T[ 49]['wrap']>>,
  // Expect<Equal<entry<[T[ 50]['a']]>, T[ 50]['wrap']>>,
  // Expect<Equal<entry<[T[ 51]['a']]>, T[ 51]['wrap']>>,
  // Expect<Equal<entry<[T[ 52]['a']]>, T[ 52]['wrap']>>,
  // Expect<Equal<entry<[T[ 53]['a']]>, T[ 53]['wrap']>>,
  // Expect<Equal<entry<[T[ 54]['a']]>, T[ 54]['wrap']>>,
  // Expect<Equal<entry<[T[ 55]['a']]>, T[ 55]['wrap']>>,
  // Expect<Equal<entry<[T[ 56]['a']]>, T[ 56]['wrap']>>,
  // Expect<Equal<entry<[T[ 57]['a']]>, T[ 57]['wrap']>>,
  // Expect<Equal<entry<[T[ 58]['a']]>, T[ 58]['wrap']>>,
  // Expect<Equal<entry<[T[ 59]['a']]>, T[ 59]['wrap']>>,
  // Expect<Equal<entry<[T[ 60]['a']]>, T[ 60]['wrap']>>,
  // Expect<Equal<entry<[T[ 61]['a']]>, T[ 61]['wrap']>>,
  // Expect<Equal<entry<[T[ 62]['a']]>, T[ 62]['wrap']>>,
  // Expect<Equal<entry<[T[ 63]['a']]>, T[ 63]['wrap']>>,
  // Expect<Equal<entry<[T[ 64]['a']]>, T[ 64]['wrap']>>,
  // Expect<Equal<entry<[T[ 65]['a']]>, T[ 65]['wrap']>>,
  // Expect<Equal<entry<[T[ 66]['a']]>, T[ 66]['wrap']>>,
  // Expect<Equal<entry<[T[ 67]['a']]>, T[ 67]['wrap']>>,
  // Expect<Equal<entry<[T[ 68]['a']]>, T[ 68]['wrap']>>,
  // Expect<Equal<entry<[T[ 69]['a']]>, T[ 69]['wrap']>>,
  // Expect<Equal<entry<[T[ 70]['a']]>, T[ 70]['wrap']>>,
  // Expect<Equal<entry<[T[ 71]['a']]>, T[ 71]['wrap']>>,
  // Expect<Equal<entry<[T[ 72]['a']]>, T[ 72]['wrap']>>,
  // Expect<Equal<entry<[T[ 73]['a']]>, T[ 73]['wrap']>>,
  // Expect<Equal<entry<[T[ 74]['a']]>, T[ 74]['wrap']>>,
  // Expect<Equal<entry<[T[ 75]['a']]>, T[ 75]['wrap']>>,
  // Expect<Equal<entry<[T[ 76]['a']]>, T[ 76]['wrap']>>,
  // Expect<Equal<entry<[T[ 77]['a']]>, T[ 77]['wrap']>>,
  // Expect<Equal<entry<[T[ 78]['a']]>, T[ 78]['wrap']>>,
  // Expect<Equal<entry<[T[ 79]['a']]>, T[ 79]['wrap']>>,
  // Expect<Equal<entry<[T[ 80]['a']]>, T[ 80]['wrap']>>,
  // Expect<Equal<entry<[T[ 81]['a']]>, T[ 81]['wrap']>>,
  // Expect<Equal<entry<[T[ 82]['a']]>, T[ 82]['wrap']>>,
  // Expect<Equal<entry<[T[ 83]['a']]>, T[ 83]['wrap']>>,
  // Expect<Equal<entry<[T[ 84]['a']]>, T[ 84]['wrap']>>,
  // Expect<Equal<entry<[T[ 85]['a']]>, T[ 85]['wrap']>>,
  // Expect<Equal<entry<[T[ 86]['a']]>, T[ 86]['wrap']>>,
  // Expect<Equal<entry<[T[ 87]['a']]>, T[ 87]['wrap']>>,
  // Expect<Equal<entry<[T[ 88]['a']]>, T[ 88]['wrap']>>,
  // Expect<Equal<entry<[T[ 89]['a']]>, T[ 89]['wrap']>>,
  // Expect<Equal<entry<[T[ 90]['a']]>, T[ 90]['wrap']>>,
  // Expect<Equal<entry<[T[ 91]['a']]>, T[ 91]['wrap']>>,
  // Expect<Equal<entry<[T[ 92]['a']]>, T[ 92]['wrap']>>,
  // Expect<Equal<entry<[T[ 93]['a']]>, T[ 93]['wrap']>>,
  // Expect<Equal<entry<[T[ 94]['a']]>, T[ 94]['wrap']>>,
  // Expect<Equal<entry<[T[ 95]['a']]>, T[ 95]['wrap']>>,
  // Expect<Equal<entry<[T[ 96]['a']]>, T[ 96]['wrap']>>,
  // Expect<Equal<entry<[T[ 97]['a']]>, T[ 97]['wrap']>>,
  // Expect<Equal<entry<[T[ 98]['a']]>, T[ 98]['wrap']>>,
  // Expect<Equal<entry<[T[ 99]['a']]>, T[ 99]['wrap']>>,
  // Expect<Equal<entry<[T[100]['a']]>, T[100]['wrap']>>,
  // Expect<Equal<entry<[T[101]['a']]>, T[101]['wrap']>>,
  // Expect<Equal<entry<[T[102]['a']]>, T[102]['wrap']>>,
  // Expect<Equal<entry<[T[103]['a']]>, T[103]['wrap']>>,
  // Expect<Equal<entry<[T[104]['a']]>, T[104]['wrap']>>,
  // Expect<Equal<entry<[T[105]['a']]>, T[105]['wrap']>>,
  // Expect<Equal<entry<[T[106]['a']]>, T[106]['wrap']>>,
  // Expect<Equal<entry<[T[107]['a']]>, T[107]['wrap']>>,
  // Expect<Equal<entry<[T[108]['a']]>, T[108]['wrap']>>,
  // Expect<Equal<entry<[T[109]['a']]>, T[109]['wrap']>>,
  // Expect<Equal<entry<[T[110]['a']]>, T[110]['wrap']>>,
  // Expect<Equal<entry<[T[111]['a']]>, T[111]['wrap']>>,
  // Expect<Equal<entry<[T[112]['a']]>, T[112]['wrap']>>,
  // Expect<Equal<entry<[T[113]['a']]>, T[113]['wrap']>>,
  // Expect<Equal<entry<[T[114]['a']]>, T[114]['wrap']>>,
  // Expect<Equal<entry<[T[115]['a']]>, T[115]['wrap']>>,
  // Expect<Equal<entry<[T[116]['a']]>, T[116]['wrap']>>,
  // Expect<Equal<entry<[T[117]['a']]>, T[117]['wrap']>>,
  // Expect<Equal<entry<[T[118]['a']]>, T[118]['wrap']>>,
  // Expect<Equal<entry<[T[119]['a']]>, T[119]['wrap']>>,
  // Expect<Equal<entry<[T[120]['a']]>, T[120]['wrap']>>,
  // Expect<Equal<entry<[T[121]['a']]>, T[121]['wrap']>>,
  // Expect<Equal<entry<[T[122]['a']]>, T[122]['wrap']>>,
  // Expect<Equal<entry<[T[123]['a']]>, T[123]['wrap']>>,
  // Expect<Equal<entry<[T[124]['a']]>, T[124]['wrap']>>,
  // Expect<Equal<entry<[T[125]['a']]>, T[125]['wrap']>>,
  // Expect<Equal<entry<[T[126]['a']]>, T[126]['wrap']>>,
  // Expect<Equal<entry<[T[127]['a']]>, T[127]['wrap']>>,
  // Expect<Equal<entry<[T[128]['a']]>, T[128]['wrap']>>,
  // Expect<Equal<entry<[T[129]['a']]>, T[129]['wrap']>>,
  // Expect<Equal<entry<[T[130]['a']]>, T[130]['wrap']>>,
  // Expect<Equal<entry<[T[131]['a']]>, T[131]['wrap']>>,
  // Expect<Equal<entry<[T[132]['a']]>, T[132]['wrap']>>,
  // Expect<Equal<entry<[T[133]['a']]>, T[133]['wrap']>>,
  // Expect<Equal<entry<[T[134]['a']]>, T[134]['wrap']>>,
  // Expect<Equal<entry<[T[135]['a']]>, T[135]['wrap']>>,
  // Expect<Equal<entry<[T[136]['a']]>, T[136]['wrap']>>,
  // Expect<Equal<entry<[T[137]['a']]>, T[137]['wrap']>>,
  // Expect<Equal<entry<[T[138]['a']]>, T[138]['wrap']>>,
  // Expect<Equal<entry<[T[139]['a']]>, T[139]['wrap']>>,
  // Expect<Equal<entry<[T[140]['a']]>, T[140]['wrap']>>,
  // Expect<Equal<entry<[T[141]['a']]>, T[141]['wrap']>>,
  // Expect<Equal<entry<[T[142]['a']]>, T[142]['wrap']>>,
  // Expect<Equal<entry<[T[143]['a']]>, T[143]['wrap']>>,
  // Expect<Equal<entry<[T[144]['a']]>, T[144]['wrap']>>,
  // Expect<Equal<entry<[T[145]['a']]>, T[145]['wrap']>>,
  // Expect<Equal<entry<[T[146]['a']]>, T[146]['wrap']>>,
  // Expect<Equal<entry<[T[147]['a']]>, T[147]['wrap']>>,
  // Expect<Equal<entry<[T[148]['a']]>, T[148]['wrap']>>,
  // Expect<Equal<entry<[T[149]['a']]>, T[149]['wrap']>>,
  // Expect<Equal<entry<[T[150]['a']]>, T[150]['wrap']>>,
  // Expect<Equal<entry<[T[151]['a']]>, T[151]['wrap']>>,
  // Expect<Equal<entry<[T[152]['a']]>, T[152]['wrap']>>,
  // Expect<Equal<entry<[T[153]['a']]>, T[153]['wrap']>>,
  Expect<Equal<entry<[T[154]['a']]>, T[154]['wrap']>>,
  Expect<Equal<entry<[T[155]['a']]>, T[155]['wrap']>>,
  Expect<Equal<entry<[T[156]['a']]>, T[156]['wrap']>>,
  Expect<Equal<entry<[T[157]['a']]>, T[157]['wrap']>>,
  Expect<Equal<entry<[T[158]['a']]>, T[158]['wrap']>>,
  Expect<Equal<entry<[T[159]['a']]>, T[159]['wrap']>>,
  Expect<Equal<entry<[T[160]['a']]>, T[160]['wrap']>>,
  Expect<Equal<entry<[T[161]['a']]>, T[161]['wrap']>>,
  Expect<Equal<entry<[T[162]['a']]>, T[162]['wrap']>>,
  Expect<Equal<entry<[T[163]['a']]>, T[163]['wrap']>>,
  Expect<Equal<entry<[T[164]['a']]>, T[164]['wrap']>>,

  Expect<Equal<T['length'], 165>>,
]
