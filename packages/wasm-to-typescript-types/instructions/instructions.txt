block
br
br_if
br_table
call
call_indirect
drop
else
f32.reinterpret_i32
f64.reinterpret_i64
global.get
global.set
i32.add
i32.and
i32.clz
i32.const
i32.ctz
i32.div_s
i32.div_u
i32.eq
i32.eqz
i32.extend_16_s
i32.extend_8_s
i32.ge_s
i32.ge_u
i32.gt_s
i32.gt_u
i32.le_u
i32.le_s
i32.load
i32.load16_s
i32.load16_u
i32.load8_s
i32.load8_u
i32.lt_s
i32.lt_u
i32.mul
i32.ne
i32.or
i32.popcnt
i32.reinterpret_f32
i32.rem_s
i32.rem_u
i32.rotl
i32.rotr
i32.shl
i32.shr_s
i32.shr_u
i32.store
i32.store_16
i32.store_8
i32.sub
i32.trunc_f32_s
i32.trunc_f64_s
i32.trunc_f64_u
i32.wrap_i64
i32.xor
i64.add
i64.and
i64.clz
i64.const
i64.ctz
i64.div_s
i64.div_u
i64.eq
i64.eqz
i64.extend_i32_s
i64.extend_i32_u
i64.ge_s
i64.ge_u
i64.gt_s
i64.gt_u
i64.le_s
i64.le_u
i64.load
i64.load16_s
i64.load16_u
i64.load32_s
i64.load32_u
i64.load8_s
i64.load8_u
i64.lt_s
i64.lt_u
i64.mul
i64.ne
i64.or
i64.popcnt
i64.reinterpret_f64
i64.rem_s
i64.rem_u
i64.rotl
i64.rotr
i64.shl
i64.shr_s
i64.shr_u
i64.store
i64.store_16
i64.store_32
i64.store_8
i64.sub
i64.xor
if
local.get
local.set
local.tee
loop
memory.grow
memory.size
nop
return
select
synth.end_block
synth.end_func
synth.end_loop
synth.halt
unreachable