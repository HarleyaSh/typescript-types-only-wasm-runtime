Type 'selectInstruction<{ count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { sign: ""; num: [1]; }>, TrimZeros<Num<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>>>>>}${FromDigits<...>}`>; ... 8 more ...; stack: state["stack"]; }, remainingInstructions, instruction>' does not satisfy the constraint 'ProgramState'.
  Type '(instruction extends IConst ? { stack: [...state["stack"], instruction["value"]]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; memorySize: state["memorySize"]; } : never) | (instruction extends ComparisonInstruction ? instruction extends IEquals ? state["stack"] extends [......] ? { ...; ...' is not assignable to type 'ProgramState'.
    Type 'instruction extends ComparisonInstruction ? instruction extends IEquals ? state["stack"] extends [......] ? { ...; } : never : instruction extends IEqualsZero ? state["stack"] extends [......] ? { ...; } : never : instruction extends INotEqual ? state["stack"] extends [......] ? { ...; } : never : instruction extend...' is not assignable to type 'ProgramState'.
      Type '(instruction extends IEquals ? state["stack"] extends [...infer remaining extends string[], infer b extends string, infer a extends string] ? { ...; } : never : instruction extends IEqualsZero ? state["stack"] extends [......] ? { ...; } : never : instruction extends INotEqual ? state["stack"] extends [......] ? { ....' is not assignable to type 'ProgramState'.
        Type 'instruction extends ArithmeticInstruction ? instruction extends IAdd ? state["stack"] extends [......] ? { ...; } : never : instruction extends ISubtract ? state["stack"] extends [......] ? { ...; } : never : instruction extends IMultiply ? state["stack"] extends [......] ? { ...; } : never : instruction extends IDi...' is not assignable to type 'ProgramState'.
          Type '(instruction extends IAdd ? state["stack"] extends [...infer remaining extends string[], infer b extends string, infer a extends string] ? { ...; } : never : instruction extends ISubtract ? state["stack"] extends [......] ? { ...; } : never : instruction extends IMultiply ? state["stack"] extends [......] ? { ...; }...' is not assignable to type 'ProgramState'.
            Type 'instruction extends FloatingPointInstruction ? instruction extends IAbsoluteValue ? state["stack"] extends [......] ? { ...; } : never : instruction extends INegate ? state["stack"] extends [......] ? { ...; } : never : never : instruction extends BitwiseInstruction ? instruction extends IAnd ? state["stack"] extend...' is not assignable to type 'ProgramState'.
              Type '(instruction extends IAbsoluteValue ? state["stack"] extends [...infer remainingStack extends string[], infer a extends string] ? { ...; } : never : instruction extends INegate ? state["stack"] extends [......] ? { ...; } : never : never) | (instruction extends BitwiseInstruction ? instruction extends IAnd ? state["...' is not assignable to type 'ProgramState'.
                Type 'instruction extends BitwiseInstruction ? instruction extends IAnd ? state["stack"] extends [......] ? { ...; } : never : instruction extends IOr ? state["stack"] extends [......] ? { ...; } : never : instruction extends IXor ? state["stack"] extends [......] ? { ...; } : never : instruction extends IShiftLeft ? stat...' is not assignable to type 'ProgramState'.
                  Type '(instruction extends IAnd ? state["stack"] extends [...infer remaining extends string[], infer b extends string, infer a extends string] ? { ...; } : never : instruction extends IOr ? state["stack"] extends [......] ? { ...; } : never : instruction extends IXor ? state["stack"] extends [......] ? { ...; } : never : ...' is not assignable to type 'ProgramState'.
                    Type 'instruction extends VariableInstruction ? instruction extends ILocalGet ? { stack: [...state["stack"], state["activeExecutionContext"]["locals"][(ILocalGet & instruction)["id"]]]; ... 8 more ...; memorySize: state["memorySize"]; } : instruction extends ILocalSet ? state["stack"] extends [......] ? { ...; } : never :...' is not assignable to type 'ProgramState'.
                      Type '(instruction extends ILocalGet ? { stack: [...state["stack"], state["activeExecutionContext"]["locals"][(ILocalGet & instruction)["id"]]]; ... 8 more ...; memorySize: state["memorySize"]; } : instruction extends ILocalSet ? state["stack"] extends [......] ? { ...; } : never : instruction extends ILocalTee ? state["s...' is not assignable to type 'ProgramState'.
                        Type 'instruction extends MemoryInstruction ? instruction extends IMemorySize ? { stack: [...state["stack"], state["memorySize"]]; ... 8 more ...; memorySize: state["memorySize"]; } : instruction extends II32Load ? state["stack"] extends [......] ? { ...; } : never : instruction extends II64Load ? state["stack"] extends [...' is not assignable to type 'ProgramState'.
                          Type '(instruction extends IMemorySize ? { stack: [...state["stack"], state["memorySize"]]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; memorySize: state["memorySize"]; } : instruction extends II32Load ? state["stack"] extends [......] ? { ...; } : never : instruction extends II64Load ? state[...' is not assignable to type 'ProgramState'.
                            Type 'instruction extends ControlFlowInstruction ? instruction extends IBlock ? { instructions: [...(IBlock & instruction)["instructions"], ...remainingInstructions]; ... 8 more ...; stack: state["stack"]; } : instruction extends IBranch ? { ...; } : instruction extends IBranchIf ? state["stack"] extends [......] ? condit...' is not assignable to type 'ProgramState'.
                              Type '(instruction extends IBlock ? { instructions: [...(IBlock & instruction)["instructions"], ...remainingInstructions]; ... 8 more ...; stack: state["stack"]; } : instruction extends IBranch ? { ...; } : instruction extends IBranchIf ? state["stack"] extends [......] ? condition extends 0 ? { ...; } : { ...; } : never ...' is not assignable to type 'ProgramState'.
                                Type 'instruction extends IBlock ? { instructions: [...(IBlock & instruction)["instructions"], ...remainingInstructions]; ... 8 more ...; stack: state["stack"]; } : instruction extends IBranch ? { ...; } : instruction extends IBranchIf ? state["stack"] extends [......] ? condition extends 0 ? { ...; } : { ...; } : never :...' is not assignable to type 'ProgramState'.
                                  Type '{ instructions: [...(IBlock & instruction)["instructions"], ...remainingInstructions]; activeExecutionContext: { branches: { [K in keyof (Omit<state["activeExecutionContext"]["branches"], (IBlock & instruction)["id"]> & { [k in (IBlock & instruction)["id"]]: remainingInstructions; })]: (Omit<...> & { [k in (IBlock &...' is not assignable to type 'ProgramState'.
                                    Type 'instruction extends IBranch ? { instructions: state["activeExecutionContext"]["branches"][(IBranch & instruction)["id"]]; ... 8 more ...; stack: state["stack"]; } : instruction extends IBranchIf ? state["stack"] extends [......] ? condition extends 0 ? { ...; } : { ...; } : never : instruction extends IBranchTable ?...' is not assignable to type 'ProgramState'.
                                      Type '{ instructions: state["activeExecutionContext"]["branches"][(IBranch & instruction)["id"]]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: state["stack"]; } | (instruction extends IBranchIf ? state["stack"] extends [......] ? condition extends 0 ? { ...; } : { ...; } : never : instru...' is not assignable to type 'ProgramState'.
                                        Type 'instruction extends IBranchIf ? state["stack"] extends [...infer remaining extends string[], infer condition extends string] ? condition extends 0 ? { ...; } : { ...; } : never : instruction extends IBranchTable ? state["stack"] extends [......] ? index extends keyof (IBranchTable & instruction)["branches"] ? { ...;...' is not assignable to type 'ProgramState'.
                                          Type '(state["stack"] extends [...infer remaining extends string[], infer condition extends string] ? condition extends 0 ? { stack: remaining; ... 8 more ...; memorySize: state["memorySize"]; } : { ...; } : never) | (instruction extends IBranchTable ? state["stack"] extends [......] ? index extends keyof (IBranchTable & ...' is not assignable to type 'ProgramState'.
                                            Type 'instruction extends IBranchTable ? state["stack"] extends [...infer remaining extends string[], infer index extends string] ? index extends keyof (IBranchTable & instruction)["branches"] ? { ...; } : { ...; } : never : instruction extends ICall ? { ...; } : instruction extends ICallIndirect ? state["stack"] extends ...' is not assignable to type 'ProgramState'.
                                              Type '(state["stack"] extends [...infer remaining extends string[], infer index extends string] ? index extends keyof (IBranchTable & instruction)["branches"] ? { ...; } : { ...; } : never) | (instruction extends ICall ? { ...; } : instruction extends ICallIndirect ? state["stack"] extends [......] ? { ...; } : never : in...' is not assignable to type 'ProgramState'.
                                                Type 'instruction extends ICall ? { instructions: [...state["funcs"][(ICall & instruction)["id"]]["instructions"], { kind: "EndFunction"; id: (ICall & instruction)["id"]; }, ...(state["funcs"][(ICall & instruction)["id"]]["params"] extends [......] ? state["stack"] extends [......] ? remainingParams extends [......] ? rem...' is not assignable to type 'ProgramState'.
                                                  Type '{ instructions: [...state["funcs"][(ICall & instruction)["id"]]["instructions"], { kind: "EndFunction"; id: (ICall & instruction)["id"]; }, ...(state["funcs"][(ICall & instruction)["id"]]["params"] extends [......] ? state["stack"] extends [......] ? remainingParams extends [......] ? remainingStack extends [......]...' is not assignable to type 'ProgramState'.
                                                    Type 'instruction extends ICallIndirect ? state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { ...; } : never : instruction extends IDrop ? state["stack"] extends [......] ? { ...; } : never : instruction extends IIf ? state["stack"] extends [......] ? condition extends 0 ? { ...; }...' is not assignable to type 'ProgramState'.
                                                      Type '(state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never) | (instruction extends IDrop ? state["stack"] extends [......] ? { ...; } : never : ins...' is not assignable to type 'ProgramState'.
                                                        Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                          Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                            Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 6 more ... | (state["stack"] extends [...' is not assignable to type 'ProgramState'.
                                                              Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                  Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 7 more ... | (state["stack"] extends [...' is not assignable to type 'ProgramState'.
                                                                    Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                      Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                        Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 8 more ... | (state["stack"] extends [...' is not assignable to type 'ProgramState'.
                                                                          Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                            Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                              Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 9 more ... | (state["stack"] extends [...' is not assignable to type 'ProgramState'.
                                                                                Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                                  Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                                    Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 10 more ... | (state["stack"] extends ...' is not assignable to type 'ProgramState'.
                                                                                      Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                                        Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                                          Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 11 more ... | (state["stack"] extends ...' is not assignable to type 'ProgramState'.
                                                                                            Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                                              Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                                                Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 64 more ... | (state["executionContext...' is not assignable to type 'ProgramState'.
                                                                                                  Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                                                    Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                                                      Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 64 more ... | (state["executionContext...' is not assignable to type 'ProgramState'.
                                                                                                        Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                                                          Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                                                            Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 64 more ... | (state["executionContext...' is not assignable to type 'ProgramState'.
                                                                                                              Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                                                                Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                                                                  Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 64 more ... | (state["executionContext...' is not assignable to type 'ProgramState'.
                                                                                                                    Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                                                                      Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                                                                        Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 64 more ... | (state["executionContext...' is not assignable to type 'ProgramState'.
                                                                                                                          Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                                                                            Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                                                                              Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 64 more ... | (state["executionContext...' is not assignable to type 'ProgramState'.
                                                                                                                                Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                                                                                  Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                                                                                    Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 64 more ... | (state["executionContext...' is not assignable to type 'ProgramState'.
                                                                                                                                      Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                                                                                        Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                                                                                          Type '{ instructions: remainingInstructions; activeExecutionContext: state["activeExecutionContext"]; count: ToNumber<`${Sign<Normalize<AddDigitNumbers<ToDigitNumber<`${state["count"]}`>, { ...; }>, TrimZeros<...>>>}${FromDigits<...>}`>; ... 6 more ...; stack: state["stack"]; } | ... 64 more ... | { ...; }' is not assignable to type 'ProgramState'.
                                                                                                                                            Type 'state["stack"] extends [...infer remainder extends string[], infer index extends string] ? { instructions: [{ kind: "Call"; id: state["indirect"][index]; }, ...remainingInstructions]; ... 8 more ...; stack: remainder; } : never' is not assignable to type 'ProgramState'.
                                                                                                                                              Type '{ instructions: [{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]; activeExecutionContext: state["activeExecutionContext"]; ... 7 more ...; stack: string[]; }' is not assignable to type 'ProgramState'.
                                                                                                                                                Types of property 'instructions' are incompatible.
                                                                                                                                                  Type '[{ kind: "Call"; id: state["indirect"][string]; }, ...remainingInstructions]' is not assignable to type 'Instruction[]'.
                                                                                                                                                    Type '{ kind: "Call"; id: state["indirect"][string]; } | remainingInstructions[number]' is not assignable to type 'Instruction'.
                                                                                                                                                      Type '{ kind: "Call"; id: state["indirect"][string]; }' is not assignable to type 'Instruction'.
                                                                                                                                                        Type '{ kind: "Call"; id: state["indirect"][string]; }' is not assignable to type 'ICall'.
                                                                                                                                                          Types of property 'id' are incompatible.
                                                                                                                                                            Type 'state["indirect"][string]' is not assignable to type 'string'.ts(2344)