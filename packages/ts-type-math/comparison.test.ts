import type { Expect, Equal } from 'type-testing';
import { t, T } from './test-cases/comparison'
import { compare } from './test-utils';
import { expect, test } from 'vitest';
import { Wasm } from './wasm';

test.each(t)('$a === $b', ({ a, b, eq }) => {
  expect(compare.eq(a, b)).toStrictEqual(eq);
  expect(t).toHaveLength(32);
});

test.each(t)('$a === 0', ({ a, eqz }) => {
  expect(compare.eqz(a)).toStrictEqual(eqz);
});

test.each(t)('$a > $b (signed)', ({ a, b, gts }) => {
  expect(compare.gts(a, b)).toStrictEqual(gts);
});

test.each(t)('$a > $b (unsigned)', ({ a, b, gtu }) => {
  expect(compare.gtu(a, b)).toStrictEqual(gtu);
});

test.each(t)('$a >= $b (signed)', ({ a, b, ges }) => {
  expect(compare.ges(a, b)).toStrictEqual(ges);
});

test.each(t)('$a >= $b (unsigned)', ({ a, b, geu }) => {
  expect(compare.geu(a, b)).toStrictEqual(geu);
});

test.each(t)('$a < $b (signed)', ({ a, b, lts }) => {
  expect(compare.lts(a, b)).toStrictEqual(lts);
});

test.each(t)('$a < $b (unsigned)', ({ a, b, ltu }) => {
  expect(compare.ltu(a, b)).toStrictEqual(ltu);
});

test.each(t)('$a <= $b (signed)', ({ a, b, les }) => {
  expect(compare.les(a, b)).toStrictEqual(les);
});

test.each(t)('$a <= $b (unsigned)', ({ a, b, leu }) => {
  expect(compare.leu(a, b)).toStrictEqual(leu);
});

type i = 5;
type a = T[i]['a_binary'];         // =>
type b = T[i]['b_binary'];         // =>
type e = T[i]['gtu_binary'];       // =>
type x = Wasm.I32GtU<a, b>         // =>

type tests = [
  Expect<Equal<T['length'], 32>>,

  Expect<Equal<Wasm.I32Eq<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[10]['a_binary'], T[10]['b_binary']>, T[10]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[11]['a_binary'], T[11]['b_binary']>, T[11]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[12]['a_binary'], T[12]['b_binary']>, T[12]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[13]['a_binary'], T[13]['b_binary']>, T[13]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[14]['a_binary'], T[14]['b_binary']>, T[14]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[15]['a_binary'], T[15]['b_binary']>, T[15]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[16]['a_binary'], T[16]['b_binary']>, T[16]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[17]['a_binary'], T[17]['b_binary']>, T[17]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[18]['a_binary'], T[18]['b_binary']>, T[18]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[19]['a_binary'], T[19]['b_binary']>, T[19]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[20]['a_binary'], T[20]['b_binary']>, T[20]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[21]['a_binary'], T[21]['b_binary']>, T[21]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[22]['a_binary'], T[22]['b_binary']>, T[22]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[23]['a_binary'], T[23]['b_binary']>, T[23]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[24]['a_binary'], T[24]['b_binary']>, T[24]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[25]['a_binary'], T[25]['b_binary']>, T[25]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[26]['a_binary'], T[26]['b_binary']>, T[26]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[27]['a_binary'], T[27]['b_binary']>, T[27]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[28]['a_binary'], T[28]['b_binary']>, T[28]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[29]['a_binary'], T[29]['b_binary']>, T[29]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[30]['a_binary'], T[30]['b_binary']>, T[30]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[31]['a_binary'], T[31]['b_binary']>, T[31]['eq_binary']>>,

  Expect<Equal<Wasm.I32Eqz<T[ 0]['a_binary']>, T[ 0]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 1]['a_binary']>, T[ 1]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 2]['a_binary']>, T[ 2]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 3]['a_binary']>, T[ 3]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 4]['a_binary']>, T[ 4]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 5]['a_binary']>, T[ 5]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 6]['a_binary']>, T[ 6]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 7]['a_binary']>, T[ 7]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 8]['a_binary']>, T[ 8]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 9]['a_binary']>, T[ 9]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[10]['a_binary']>, T[10]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[11]['a_binary']>, T[11]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[12]['a_binary']>, T[12]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[13]['a_binary']>, T[13]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[14]['a_binary']>, T[14]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[15]['a_binary']>, T[15]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[16]['a_binary']>, T[16]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[17]['a_binary']>, T[17]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[18]['a_binary']>, T[18]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[19]['a_binary']>, T[19]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[20]['a_binary']>, T[20]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[21]['a_binary']>, T[21]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[22]['a_binary']>, T[22]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[23]['a_binary']>, T[23]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[24]['a_binary']>, T[24]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[25]['a_binary']>, T[25]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[26]['a_binary']>, T[26]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[27]['a_binary']>, T[27]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[28]['a_binary']>, T[28]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[29]['a_binary']>, T[29]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[30]['a_binary']>, T[30]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[31]['a_binary']>, T[31]['eqz_binary']>>,

  Expect<Equal<Wasm.I32GtU<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[10]['a_binary'], T[10]['b_binary']>, T[10]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[11]['a_binary'], T[11]['b_binary']>, T[11]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[12]['a_binary'], T[12]['b_binary']>, T[12]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[13]['a_binary'], T[13]['b_binary']>, T[13]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[14]['a_binary'], T[14]['b_binary']>, T[14]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[15]['a_binary'], T[15]['b_binary']>, T[15]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[16]['a_binary'], T[16]['b_binary']>, T[16]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[17]['a_binary'], T[17]['b_binary']>, T[17]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[18]['a_binary'], T[18]['b_binary']>, T[18]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[19]['a_binary'], T[19]['b_binary']>, T[19]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[20]['a_binary'], T[20]['b_binary']>, T[20]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[21]['a_binary'], T[21]['b_binary']>, T[21]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[22]['a_binary'], T[22]['b_binary']>, T[22]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[23]['a_binary'], T[23]['b_binary']>, T[23]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[24]['a_binary'], T[24]['b_binary']>, T[24]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[25]['a_binary'], T[25]['b_binary']>, T[25]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[26]['a_binary'], T[26]['b_binary']>, T[26]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[27]['a_binary'], T[27]['b_binary']>, T[27]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[28]['a_binary'], T[28]['b_binary']>, T[28]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[29]['a_binary'], T[29]['b_binary']>, T[29]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[30]['a_binary'], T[30]['b_binary']>, T[30]['gtu_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[31]['a_binary'], T[31]['b_binary']>, T[31]['gtu_binary']>>,

  Expect<Equal<Wasm.I32GeU<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[10]['a_binary'], T[10]['b_binary']>, T[10]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[11]['a_binary'], T[11]['b_binary']>, T[11]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[12]['a_binary'], T[12]['b_binary']>, T[12]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[13]['a_binary'], T[13]['b_binary']>, T[13]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[14]['a_binary'], T[14]['b_binary']>, T[14]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[15]['a_binary'], T[15]['b_binary']>, T[15]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[16]['a_binary'], T[16]['b_binary']>, T[16]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[17]['a_binary'], T[17]['b_binary']>, T[17]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[18]['a_binary'], T[18]['b_binary']>, T[18]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[19]['a_binary'], T[19]['b_binary']>, T[19]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[20]['a_binary'], T[20]['b_binary']>, T[20]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[21]['a_binary'], T[21]['b_binary']>, T[21]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[22]['a_binary'], T[22]['b_binary']>, T[22]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[23]['a_binary'], T[23]['b_binary']>, T[23]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[24]['a_binary'], T[24]['b_binary']>, T[24]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[25]['a_binary'], T[25]['b_binary']>, T[25]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[26]['a_binary'], T[26]['b_binary']>, T[26]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[27]['a_binary'], T[27]['b_binary']>, T[27]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[28]['a_binary'], T[28]['b_binary']>, T[28]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[29]['a_binary'], T[29]['b_binary']>, T[29]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[30]['a_binary'], T[30]['b_binary']>, T[30]['geu_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[31]['a_binary'], T[31]['b_binary']>, T[31]['geu_binary']>>,

  Expect<Equal<Wasm.I32LtU<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[10]['a_binary'], T[10]['b_binary']>, T[10]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[11]['a_binary'], T[11]['b_binary']>, T[11]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[12]['a_binary'], T[12]['b_binary']>, T[12]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[13]['a_binary'], T[13]['b_binary']>, T[13]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[14]['a_binary'], T[14]['b_binary']>, T[14]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[15]['a_binary'], T[15]['b_binary']>, T[15]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[16]['a_binary'], T[16]['b_binary']>, T[16]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[17]['a_binary'], T[17]['b_binary']>, T[17]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[18]['a_binary'], T[18]['b_binary']>, T[18]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[19]['a_binary'], T[19]['b_binary']>, T[19]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[20]['a_binary'], T[20]['b_binary']>, T[20]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[21]['a_binary'], T[21]['b_binary']>, T[21]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[22]['a_binary'], T[22]['b_binary']>, T[22]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[23]['a_binary'], T[23]['b_binary']>, T[23]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[24]['a_binary'], T[24]['b_binary']>, T[24]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[25]['a_binary'], T[25]['b_binary']>, T[25]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[26]['a_binary'], T[26]['b_binary']>, T[26]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[27]['a_binary'], T[27]['b_binary']>, T[27]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[28]['a_binary'], T[28]['b_binary']>, T[28]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[29]['a_binary'], T[29]['b_binary']>, T[29]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[30]['a_binary'], T[30]['b_binary']>, T[30]['ltu_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[31]['a_binary'], T[31]['b_binary']>, T[31]['ltu_binary']>>,

  Expect<Equal<Wasm.I32LeU<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[10]['a_binary'], T[10]['b_binary']>, T[10]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[11]['a_binary'], T[11]['b_binary']>, T[11]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[12]['a_binary'], T[12]['b_binary']>, T[12]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[13]['a_binary'], T[13]['b_binary']>, T[13]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[14]['a_binary'], T[14]['b_binary']>, T[14]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[15]['a_binary'], T[15]['b_binary']>, T[15]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[16]['a_binary'], T[16]['b_binary']>, T[16]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[17]['a_binary'], T[17]['b_binary']>, T[17]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[18]['a_binary'], T[18]['b_binary']>, T[18]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[19]['a_binary'], T[19]['b_binary']>, T[19]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[20]['a_binary'], T[20]['b_binary']>, T[20]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[21]['a_binary'], T[21]['b_binary']>, T[21]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[22]['a_binary'], T[22]['b_binary']>, T[22]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[23]['a_binary'], T[23]['b_binary']>, T[23]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[24]['a_binary'], T[24]['b_binary']>, T[24]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[25]['a_binary'], T[25]['b_binary']>, T[25]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[26]['a_binary'], T[26]['b_binary']>, T[26]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[27]['a_binary'], T[27]['b_binary']>, T[27]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[28]['a_binary'], T[28]['b_binary']>, T[28]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[29]['a_binary'], T[29]['b_binary']>, T[29]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[30]['a_binary'], T[30]['b_binary']>, T[30]['leu_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[31]['a_binary'], T[31]['b_binary']>, T[31]['leu_binary']>>,


  Expect<Equal<Wasm.I32GtS<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[10]['a_binary'], T[10]['b_binary']>, T[10]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[11]['a_binary'], T[11]['b_binary']>, T[11]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[12]['a_binary'], T[12]['b_binary']>, T[12]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[13]['a_binary'], T[13]['b_binary']>, T[13]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[14]['a_binary'], T[14]['b_binary']>, T[14]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[15]['a_binary'], T[15]['b_binary']>, T[15]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[16]['a_binary'], T[16]['b_binary']>, T[16]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[17]['a_binary'], T[17]['b_binary']>, T[17]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[18]['a_binary'], T[18]['b_binary']>, T[18]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[19]['a_binary'], T[19]['b_binary']>, T[19]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[20]['a_binary'], T[20]['b_binary']>, T[20]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[21]['a_binary'], T[21]['b_binary']>, T[21]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[22]['a_binary'], T[22]['b_binary']>, T[22]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[23]['a_binary'], T[23]['b_binary']>, T[23]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[24]['a_binary'], T[24]['b_binary']>, T[24]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[25]['a_binary'], T[25]['b_binary']>, T[25]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[26]['a_binary'], T[26]['b_binary']>, T[26]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[27]['a_binary'], T[27]['b_binary']>, T[27]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[28]['a_binary'], T[28]['b_binary']>, T[28]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[29]['a_binary'], T[29]['b_binary']>, T[29]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[30]['a_binary'], T[30]['b_binary']>, T[30]['gts_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[31]['a_binary'], T[31]['b_binary']>, T[31]['gts_binary']>>,

  Expect<Equal<Wasm.I32GeS<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[10]['a_binary'], T[10]['b_binary']>, T[10]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[11]['a_binary'], T[11]['b_binary']>, T[11]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[12]['a_binary'], T[12]['b_binary']>, T[12]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[13]['a_binary'], T[13]['b_binary']>, T[13]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[14]['a_binary'], T[14]['b_binary']>, T[14]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[15]['a_binary'], T[15]['b_binary']>, T[15]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[16]['a_binary'], T[16]['b_binary']>, T[16]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[17]['a_binary'], T[17]['b_binary']>, T[17]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[18]['a_binary'], T[18]['b_binary']>, T[18]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[19]['a_binary'], T[19]['b_binary']>, T[19]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[20]['a_binary'], T[20]['b_binary']>, T[20]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[21]['a_binary'], T[21]['b_binary']>, T[21]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[22]['a_binary'], T[22]['b_binary']>, T[22]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[23]['a_binary'], T[23]['b_binary']>, T[23]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[24]['a_binary'], T[24]['b_binary']>, T[24]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[25]['a_binary'], T[25]['b_binary']>, T[25]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[26]['a_binary'], T[26]['b_binary']>, T[26]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[27]['a_binary'], T[27]['b_binary']>, T[27]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[28]['a_binary'], T[28]['b_binary']>, T[28]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[29]['a_binary'], T[29]['b_binary']>, T[29]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[30]['a_binary'], T[30]['b_binary']>, T[30]['ges_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[31]['a_binary'], T[31]['b_binary']>, T[31]['ges_binary']>>,

  Expect<Equal<Wasm.I32LtS<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[10]['a_binary'], T[10]['b_binary']>, T[10]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[11]['a_binary'], T[11]['b_binary']>, T[11]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[12]['a_binary'], T[12]['b_binary']>, T[12]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[13]['a_binary'], T[13]['b_binary']>, T[13]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[14]['a_binary'], T[14]['b_binary']>, T[14]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[15]['a_binary'], T[15]['b_binary']>, T[15]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[16]['a_binary'], T[16]['b_binary']>, T[16]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[17]['a_binary'], T[17]['b_binary']>, T[17]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[18]['a_binary'], T[18]['b_binary']>, T[18]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[19]['a_binary'], T[19]['b_binary']>, T[19]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[20]['a_binary'], T[20]['b_binary']>, T[20]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[21]['a_binary'], T[21]['b_binary']>, T[21]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[22]['a_binary'], T[22]['b_binary']>, T[22]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[23]['a_binary'], T[23]['b_binary']>, T[23]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[24]['a_binary'], T[24]['b_binary']>, T[24]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[25]['a_binary'], T[25]['b_binary']>, T[25]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[26]['a_binary'], T[26]['b_binary']>, T[26]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[27]['a_binary'], T[27]['b_binary']>, T[27]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[28]['a_binary'], T[28]['b_binary']>, T[28]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[29]['a_binary'], T[29]['b_binary']>, T[29]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[30]['a_binary'], T[30]['b_binary']>, T[30]['lts_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[31]['a_binary'], T[31]['b_binary']>, T[31]['lts_binary']>>,

  Expect<Equal<Wasm.I32LeS<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[10]['a_binary'], T[10]['b_binary']>, T[10]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[11]['a_binary'], T[11]['b_binary']>, T[11]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[12]['a_binary'], T[12]['b_binary']>, T[12]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[13]['a_binary'], T[13]['b_binary']>, T[13]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[14]['a_binary'], T[14]['b_binary']>, T[14]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[15]['a_binary'], T[15]['b_binary']>, T[15]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[16]['a_binary'], T[16]['b_binary']>, T[16]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[17]['a_binary'], T[17]['b_binary']>, T[17]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[18]['a_binary'], T[18]['b_binary']>, T[18]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[19]['a_binary'], T[19]['b_binary']>, T[19]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[20]['a_binary'], T[20]['b_binary']>, T[20]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[21]['a_binary'], T[21]['b_binary']>, T[21]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[22]['a_binary'], T[22]['b_binary']>, T[22]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[23]['a_binary'], T[23]['b_binary']>, T[23]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[24]['a_binary'], T[24]['b_binary']>, T[24]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[25]['a_binary'], T[25]['b_binary']>, T[25]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[26]['a_binary'], T[26]['b_binary']>, T[26]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[27]['a_binary'], T[27]['b_binary']>, T[27]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[28]['a_binary'], T[28]['b_binary']>, T[28]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[29]['a_binary'], T[29]['b_binary']>, T[29]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[30]['a_binary'], T[30]['b_binary']>, T[30]['les_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[31]['a_binary'], T[31]['b_binary']>, T[31]['les_binary']>>,
]
