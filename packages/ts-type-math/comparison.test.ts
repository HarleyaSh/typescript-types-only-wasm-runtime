import type { Expect, Equal } from 'type-testing';
import { t, T } from './test-cases/comparison'
import { compare } from './test-utils';
import { expect, test } from 'vitest';
import { Wasm } from './wasm';

test.each(t)('$a === $b', ({ a, b, eq }) => {
  expect(compare.eq(a, b)).toStrictEqual(eq);
  expect(t).toHaveLength(32);
});

test.each(t)('$a === 0', ({ a, eqz }) => {
  expect(compare.eqz(a)).toStrictEqual(eqz);
});

test.each(t)('$a > $b (signed)', ({ a, b, gt_s }) => {
  expect(compare.gts(a, b)).toStrictEqual(gt_s);
});

test.each(t)('$a > $b (unsigned)', ({ a, b, gt_u }) => {
  expect(compare.gtu(a, b)).toStrictEqual(gt_u);
});

test.each(t)('$a >= $b (signed)', ({ a, b, ge_s }) => {
  expect(compare.ges(a, b)).toStrictEqual(ge_s);
});

test.each(t)('$a >= $b (unsigned)', ({ a, b, ge_u }) => {
  expect(compare.geu(a, b)).toStrictEqual(ge_u);
});

test.each(t)('$a < $b (signed)', ({ a, b, lt_s }) => {
  expect(compare.lts(a, b)).toStrictEqual(lt_s);
});

test.each(t)('$a < $b (unsigned)', ({ a, b, lt_u }) => {
  expect(compare.ltu(a, b)).toStrictEqual(lt_u);
});

test.each(t)('$a <= $b (signed)', ({ a, b, le_s }) => {
  expect(compare.les(a, b)).toStrictEqual(le_s);
});

test.each(t)('$a <= $b (unsigned)', ({ a, b, le_u }) => {
  expect(compare.leu(a, b)).toStrictEqual(le_u);
});

type i = 5;
type a = T[i]['a_binary'];         // =>
type b = T[i]['b_binary'];         // =>
type e = T[i]['gt_u_binary'];      // =>
type x = Wasm.I32GtU<a, b>         // =>

type tests = [
  Expect<Equal<T['length'], 32>>,

  Expect<Equal<Wasm.I32Eq<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[10]['a_binary'], T[10]['b_binary']>, T[10]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[11]['a_binary'], T[11]['b_binary']>, T[11]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[12]['a_binary'], T[12]['b_binary']>, T[12]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[13]['a_binary'], T[13]['b_binary']>, T[13]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[14]['a_binary'], T[14]['b_binary']>, T[14]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[15]['a_binary'], T[15]['b_binary']>, T[15]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[16]['a_binary'], T[16]['b_binary']>, T[16]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[17]['a_binary'], T[17]['b_binary']>, T[17]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[18]['a_binary'], T[18]['b_binary']>, T[18]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[19]['a_binary'], T[19]['b_binary']>, T[19]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[20]['a_binary'], T[20]['b_binary']>, T[20]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[21]['a_binary'], T[21]['b_binary']>, T[21]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[22]['a_binary'], T[22]['b_binary']>, T[22]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[23]['a_binary'], T[23]['b_binary']>, T[23]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[24]['a_binary'], T[24]['b_binary']>, T[24]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[25]['a_binary'], T[25]['b_binary']>, T[25]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[26]['a_binary'], T[26]['b_binary']>, T[26]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[27]['a_binary'], T[27]['b_binary']>, T[27]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[28]['a_binary'], T[28]['b_binary']>, T[28]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[29]['a_binary'], T[29]['b_binary']>, T[29]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[30]['a_binary'], T[30]['b_binary']>, T[30]['eq_binary']>>,
  Expect<Equal<Wasm.I32Eq<T[31]['a_binary'], T[31]['b_binary']>, T[31]['eq_binary']>>,

  Expect<Equal<Wasm.I32Eqz<T[ 0]['a_binary']>, T[ 0]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 1]['a_binary']>, T[ 1]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 2]['a_binary']>, T[ 2]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 3]['a_binary']>, T[ 3]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 4]['a_binary']>, T[ 4]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 5]['a_binary']>, T[ 5]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 6]['a_binary']>, T[ 6]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 7]['a_binary']>, T[ 7]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 8]['a_binary']>, T[ 8]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[ 9]['a_binary']>, T[ 9]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[10]['a_binary']>, T[10]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[11]['a_binary']>, T[11]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[12]['a_binary']>, T[12]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[13]['a_binary']>, T[13]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[14]['a_binary']>, T[14]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[15]['a_binary']>, T[15]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[16]['a_binary']>, T[16]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[17]['a_binary']>, T[17]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[18]['a_binary']>, T[18]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[19]['a_binary']>, T[19]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[20]['a_binary']>, T[20]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[21]['a_binary']>, T[21]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[22]['a_binary']>, T[22]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[23]['a_binary']>, T[23]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[24]['a_binary']>, T[24]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[25]['a_binary']>, T[25]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[26]['a_binary']>, T[26]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[27]['a_binary']>, T[27]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[28]['a_binary']>, T[28]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[29]['a_binary']>, T[29]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[30]['a_binary']>, T[30]['eqz_binary']>>,
  Expect<Equal<Wasm.I32Eqz<T[31]['a_binary']>, T[31]['eqz_binary']>>,

  Expect<Equal<Wasm.I32GtU<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[10]['a_binary'], T[10]['b_binary']>, T[10]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[11]['a_binary'], T[11]['b_binary']>, T[11]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[12]['a_binary'], T[12]['b_binary']>, T[12]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[13]['a_binary'], T[13]['b_binary']>, T[13]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[14]['a_binary'], T[14]['b_binary']>, T[14]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[15]['a_binary'], T[15]['b_binary']>, T[15]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[16]['a_binary'], T[16]['b_binary']>, T[16]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[17]['a_binary'], T[17]['b_binary']>, T[17]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[18]['a_binary'], T[18]['b_binary']>, T[18]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[19]['a_binary'], T[19]['b_binary']>, T[19]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[20]['a_binary'], T[20]['b_binary']>, T[20]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[21]['a_binary'], T[21]['b_binary']>, T[21]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[22]['a_binary'], T[22]['b_binary']>, T[22]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[23]['a_binary'], T[23]['b_binary']>, T[23]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[24]['a_binary'], T[24]['b_binary']>, T[24]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[25]['a_binary'], T[25]['b_binary']>, T[25]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[26]['a_binary'], T[26]['b_binary']>, T[26]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[27]['a_binary'], T[27]['b_binary']>, T[27]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[28]['a_binary'], T[28]['b_binary']>, T[28]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[29]['a_binary'], T[29]['b_binary']>, T[29]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[30]['a_binary'], T[30]['b_binary']>, T[30]['gt_u_binary']>>,
  Expect<Equal<Wasm.I32GtU<T[31]['a_binary'], T[31]['b_binary']>, T[31]['gt_u_binary']>>,

  Expect<Equal<Wasm.I32GeU<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[10]['a_binary'], T[10]['b_binary']>, T[10]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[11]['a_binary'], T[11]['b_binary']>, T[11]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[12]['a_binary'], T[12]['b_binary']>, T[12]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[13]['a_binary'], T[13]['b_binary']>, T[13]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[14]['a_binary'], T[14]['b_binary']>, T[14]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[15]['a_binary'], T[15]['b_binary']>, T[15]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[16]['a_binary'], T[16]['b_binary']>, T[16]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[17]['a_binary'], T[17]['b_binary']>, T[17]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[18]['a_binary'], T[18]['b_binary']>, T[18]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[19]['a_binary'], T[19]['b_binary']>, T[19]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[20]['a_binary'], T[20]['b_binary']>, T[20]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[21]['a_binary'], T[21]['b_binary']>, T[21]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[22]['a_binary'], T[22]['b_binary']>, T[22]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[23]['a_binary'], T[23]['b_binary']>, T[23]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[24]['a_binary'], T[24]['b_binary']>, T[24]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[25]['a_binary'], T[25]['b_binary']>, T[25]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[26]['a_binary'], T[26]['b_binary']>, T[26]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[27]['a_binary'], T[27]['b_binary']>, T[27]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[28]['a_binary'], T[28]['b_binary']>, T[28]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[29]['a_binary'], T[29]['b_binary']>, T[29]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[30]['a_binary'], T[30]['b_binary']>, T[30]['ge_u_binary']>>,
  Expect<Equal<Wasm.I32GeU<T[31]['a_binary'], T[31]['b_binary']>, T[31]['ge_u_binary']>>,

  Expect<Equal<Wasm.I32LtU<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[10]['a_binary'], T[10]['b_binary']>, T[10]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[11]['a_binary'], T[11]['b_binary']>, T[11]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[12]['a_binary'], T[12]['b_binary']>, T[12]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[13]['a_binary'], T[13]['b_binary']>, T[13]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[14]['a_binary'], T[14]['b_binary']>, T[14]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[15]['a_binary'], T[15]['b_binary']>, T[15]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[16]['a_binary'], T[16]['b_binary']>, T[16]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[17]['a_binary'], T[17]['b_binary']>, T[17]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[18]['a_binary'], T[18]['b_binary']>, T[18]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[19]['a_binary'], T[19]['b_binary']>, T[19]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[20]['a_binary'], T[20]['b_binary']>, T[20]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[21]['a_binary'], T[21]['b_binary']>, T[21]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[22]['a_binary'], T[22]['b_binary']>, T[22]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[23]['a_binary'], T[23]['b_binary']>, T[23]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[24]['a_binary'], T[24]['b_binary']>, T[24]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[25]['a_binary'], T[25]['b_binary']>, T[25]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[26]['a_binary'], T[26]['b_binary']>, T[26]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[27]['a_binary'], T[27]['b_binary']>, T[27]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[28]['a_binary'], T[28]['b_binary']>, T[28]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[29]['a_binary'], T[29]['b_binary']>, T[29]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[30]['a_binary'], T[30]['b_binary']>, T[30]['lt_u_binary']>>,
  Expect<Equal<Wasm.I32LtU<T[31]['a_binary'], T[31]['b_binary']>, T[31]['lt_u_binary']>>,

  Expect<Equal<Wasm.I32LeU<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[10]['a_binary'], T[10]['b_binary']>, T[10]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[11]['a_binary'], T[11]['b_binary']>, T[11]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[12]['a_binary'], T[12]['b_binary']>, T[12]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[13]['a_binary'], T[13]['b_binary']>, T[13]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[14]['a_binary'], T[14]['b_binary']>, T[14]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[15]['a_binary'], T[15]['b_binary']>, T[15]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[16]['a_binary'], T[16]['b_binary']>, T[16]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[17]['a_binary'], T[17]['b_binary']>, T[17]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[18]['a_binary'], T[18]['b_binary']>, T[18]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[19]['a_binary'], T[19]['b_binary']>, T[19]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[20]['a_binary'], T[20]['b_binary']>, T[20]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[21]['a_binary'], T[21]['b_binary']>, T[21]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[22]['a_binary'], T[22]['b_binary']>, T[22]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[23]['a_binary'], T[23]['b_binary']>, T[23]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[24]['a_binary'], T[24]['b_binary']>, T[24]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[25]['a_binary'], T[25]['b_binary']>, T[25]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[26]['a_binary'], T[26]['b_binary']>, T[26]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[27]['a_binary'], T[27]['b_binary']>, T[27]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[28]['a_binary'], T[28]['b_binary']>, T[28]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[29]['a_binary'], T[29]['b_binary']>, T[29]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[30]['a_binary'], T[30]['b_binary']>, T[30]['le_u_binary']>>,
  Expect<Equal<Wasm.I32LeU<T[31]['a_binary'], T[31]['b_binary']>, T[31]['le_u_binary']>>,


  Expect<Equal<Wasm.I32GtS<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[10]['a_binary'], T[10]['b_binary']>, T[10]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[11]['a_binary'], T[11]['b_binary']>, T[11]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[12]['a_binary'], T[12]['b_binary']>, T[12]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[13]['a_binary'], T[13]['b_binary']>, T[13]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[14]['a_binary'], T[14]['b_binary']>, T[14]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[15]['a_binary'], T[15]['b_binary']>, T[15]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[16]['a_binary'], T[16]['b_binary']>, T[16]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[17]['a_binary'], T[17]['b_binary']>, T[17]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[18]['a_binary'], T[18]['b_binary']>, T[18]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[19]['a_binary'], T[19]['b_binary']>, T[19]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[20]['a_binary'], T[20]['b_binary']>, T[20]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[21]['a_binary'], T[21]['b_binary']>, T[21]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[22]['a_binary'], T[22]['b_binary']>, T[22]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[23]['a_binary'], T[23]['b_binary']>, T[23]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[24]['a_binary'], T[24]['b_binary']>, T[24]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[25]['a_binary'], T[25]['b_binary']>, T[25]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[26]['a_binary'], T[26]['b_binary']>, T[26]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[27]['a_binary'], T[27]['b_binary']>, T[27]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[28]['a_binary'], T[28]['b_binary']>, T[28]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[29]['a_binary'], T[29]['b_binary']>, T[29]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[30]['a_binary'], T[30]['b_binary']>, T[30]['gt_s_binary']>>,
  Expect<Equal<Wasm.I32GtS<T[31]['a_binary'], T[31]['b_binary']>, T[31]['gt_s_binary']>>,

  Expect<Equal<Wasm.I32GeS<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[10]['a_binary'], T[10]['b_binary']>, T[10]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[11]['a_binary'], T[11]['b_binary']>, T[11]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[12]['a_binary'], T[12]['b_binary']>, T[12]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[13]['a_binary'], T[13]['b_binary']>, T[13]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[14]['a_binary'], T[14]['b_binary']>, T[14]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[15]['a_binary'], T[15]['b_binary']>, T[15]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[16]['a_binary'], T[16]['b_binary']>, T[16]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[17]['a_binary'], T[17]['b_binary']>, T[17]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[18]['a_binary'], T[18]['b_binary']>, T[18]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[19]['a_binary'], T[19]['b_binary']>, T[19]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[20]['a_binary'], T[20]['b_binary']>, T[20]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[21]['a_binary'], T[21]['b_binary']>, T[21]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[22]['a_binary'], T[22]['b_binary']>, T[22]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[23]['a_binary'], T[23]['b_binary']>, T[23]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[24]['a_binary'], T[24]['b_binary']>, T[24]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[25]['a_binary'], T[25]['b_binary']>, T[25]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[26]['a_binary'], T[26]['b_binary']>, T[26]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[27]['a_binary'], T[27]['b_binary']>, T[27]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[28]['a_binary'], T[28]['b_binary']>, T[28]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[29]['a_binary'], T[29]['b_binary']>, T[29]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[30]['a_binary'], T[30]['b_binary']>, T[30]['ge_s_binary']>>,
  Expect<Equal<Wasm.I32GeS<T[31]['a_binary'], T[31]['b_binary']>, T[31]['ge_s_binary']>>,

  Expect<Equal<Wasm.I32LtS<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[10]['a_binary'], T[10]['b_binary']>, T[10]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[11]['a_binary'], T[11]['b_binary']>, T[11]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[12]['a_binary'], T[12]['b_binary']>, T[12]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[13]['a_binary'], T[13]['b_binary']>, T[13]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[14]['a_binary'], T[14]['b_binary']>, T[14]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[15]['a_binary'], T[15]['b_binary']>, T[15]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[16]['a_binary'], T[16]['b_binary']>, T[16]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[17]['a_binary'], T[17]['b_binary']>, T[17]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[18]['a_binary'], T[18]['b_binary']>, T[18]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[19]['a_binary'], T[19]['b_binary']>, T[19]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[20]['a_binary'], T[20]['b_binary']>, T[20]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[21]['a_binary'], T[21]['b_binary']>, T[21]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[22]['a_binary'], T[22]['b_binary']>, T[22]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[23]['a_binary'], T[23]['b_binary']>, T[23]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[24]['a_binary'], T[24]['b_binary']>, T[24]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[25]['a_binary'], T[25]['b_binary']>, T[25]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[26]['a_binary'], T[26]['b_binary']>, T[26]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[27]['a_binary'], T[27]['b_binary']>, T[27]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[28]['a_binary'], T[28]['b_binary']>, T[28]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[29]['a_binary'], T[29]['b_binary']>, T[29]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[30]['a_binary'], T[30]['b_binary']>, T[30]['lt_s_binary']>>,
  Expect<Equal<Wasm.I32LtS<T[31]['a_binary'], T[31]['b_binary']>, T[31]['lt_s_binary']>>,

  Expect<Equal<Wasm.I32LeS<T[ 0]['a_binary'], T[ 0]['b_binary']>, T[ 0]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 1]['a_binary'], T[ 1]['b_binary']>, T[ 1]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 2]['a_binary'], T[ 2]['b_binary']>, T[ 2]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 3]['a_binary'], T[ 3]['b_binary']>, T[ 3]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 4]['a_binary'], T[ 4]['b_binary']>, T[ 4]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 5]['a_binary'], T[ 5]['b_binary']>, T[ 5]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 6]['a_binary'], T[ 6]['b_binary']>, T[ 6]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 7]['a_binary'], T[ 7]['b_binary']>, T[ 7]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 8]['a_binary'], T[ 8]['b_binary']>, T[ 8]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[ 9]['a_binary'], T[ 9]['b_binary']>, T[ 9]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[10]['a_binary'], T[10]['b_binary']>, T[10]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[11]['a_binary'], T[11]['b_binary']>, T[11]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[12]['a_binary'], T[12]['b_binary']>, T[12]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[13]['a_binary'], T[13]['b_binary']>, T[13]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[14]['a_binary'], T[14]['b_binary']>, T[14]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[15]['a_binary'], T[15]['b_binary']>, T[15]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[16]['a_binary'], T[16]['b_binary']>, T[16]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[17]['a_binary'], T[17]['b_binary']>, T[17]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[18]['a_binary'], T[18]['b_binary']>, T[18]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[19]['a_binary'], T[19]['b_binary']>, T[19]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[20]['a_binary'], T[20]['b_binary']>, T[20]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[21]['a_binary'], T[21]['b_binary']>, T[21]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[22]['a_binary'], T[22]['b_binary']>, T[22]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[23]['a_binary'], T[23]['b_binary']>, T[23]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[24]['a_binary'], T[24]['b_binary']>, T[24]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[25]['a_binary'], T[25]['b_binary']>, T[25]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[26]['a_binary'], T[26]['b_binary']>, T[26]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[27]['a_binary'], T[27]['b_binary']>, T[27]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[28]['a_binary'], T[28]['b_binary']>, T[28]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[29]['a_binary'], T[29]['b_binary']>, T[29]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[30]['a_binary'], T[30]['b_binary']>, T[30]['le_s_binary']>>,
  Expect<Equal<Wasm.I32LeS<T[31]['a_binary'], T[31]['b_binary']>, T[31]['le_s_binary']>>,
]
