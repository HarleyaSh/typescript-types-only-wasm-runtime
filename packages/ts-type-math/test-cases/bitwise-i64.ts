export type T = typeof t;
export type Ops = {
  and: (a: bigint, b: bigint) => bigint,
  or: (a: bigint, b: bigint) => bigint,
  xor: (a: bigint, b: bigint) => bigint,
  not: (a: bigint) => bigint,
}
export const t = [
  {
    a: -1n,
    b: 0n,
    and: 0n,
    or: -1n,
    xor: -1n,
    not: 0n,
    a_binary64:   "1111111111111111111111111111111111111111111111111111111111111111",
    b_binary64:   "0000000000000000000000000000000000000000000000000000000000000000",
    and_binary64: "0000000000000000000000000000000000000000000000000000000000000000",
    or_binary64:  "1111111111111111111111111111111111111111111111111111111111111111",
    xor_binary64: "1111111111111111111111111111111111111111111111111111111111111111",
    not_binary64: "0000000000000000000000000000000000000000000000000000000000000000",
  },
  {
    a: -1n,
    b: -1n,
    and: -1n,
    or: -1n,
    xor: 0n,
    not: 0n,
    a_binary64:   "1111111111111111111111111111111111111111111111111111111111111111",
    b_binary64:   "1111111111111111111111111111111111111111111111111111111111111111",
    and_binary64: "1111111111111111111111111111111111111111111111111111111111111111",
    or_binary64:  "1111111111111111111111111111111111111111111111111111111111111111",
    xor_binary64: "0000000000000000000000000000000000000000000000000000000000000000",
    not_binary64: "0000000000000000000000000000000000000000000000000000000000000000",
  },
  {
    a: 0n,
    b: 0n,
    and: 0n,
    or: 0n,
    xor: 0n,
    not: -1n,
    a_binary64:   "0000000000000000000000000000000000000000000000000000000000000000",
    b_binary64:   "0000000000000000000000000000000000000000000000000000000000000000",
    and_binary64: "0000000000000000000000000000000000000000000000000000000000000000",
    or_binary64:  "0000000000000000000000000000000000000000000000000000000000000000",
    xor_binary64: "0000000000000000000000000000000000000000000000000000000000000000",
    not_binary64: "1111111111111111111111111111111111111111111111111111111111111111",
  },
  {
    a: 0n,
    b: -1n,
    and: 0n,
    or: -1n,
    xor: -1n,
    not: -1n,
    a_binary64:   "0000000000000000000000000000000000000000000000000000000000000000",
    b_binary64:   "1111111111111111111111111111111111111111111111111111111111111111",
    and_binary64: "0000000000000000000000000000000000000000000000000000000000000000",
    or_binary64:  "1111111111111111111111111111111111111111111111111111111111111111",
    xor_binary64: "1111111111111111111111111111111111111111111111111111111111111111",
    not_binary64: "1111111111111111111111111111111111111111111111111111111111111111",
  },
  {
    a: 1n,
    b: 2n,
    and: 0n,
    or: 3n,
    xor: 3n,
    not: -2n,
    a_binary64:   "0000000000000000000000000000000000000000000000000000000000000001",
    b_binary64:   "0000000000000000000000000000000000000000000000000000000000000010",
    and_binary64: "0000000000000000000000000000000000000000000000000000000000000000",
    or_binary64:  "0000000000000000000000000000000000000000000000000000000000000011",
    xor_binary64: "0000000000000000000000000000000000000000000000000000000000000011",
    not_binary64: "1111111111111111111111111111111111111111111111111111111111111110",
  },
  {
    a: 3n,
    b: 7n,
    and: 3n,
    or: 7n,
    xor: 4n,
    not: -4n,
    a_binary64:   "0000000000000000000000000000000000000000000000000000000000000011",
    b_binary64:   "0000000000000000000000000000000000000000000000000000000000000111",
    and_binary64: "0000000000000000000000000000000000000000000000000000000000000011",
    or_binary64:  "0000000000000000000000000000000000000000000000000000000000000111",
    xor_binary64: "0000000000000000000000000000000000000000000000000000000000000100",
    not_binary64: "1111111111111111111111111111111111111111111111111111111111111100",
  },
  {
    a: 0n,
    b: 1n,
    and: 0n,
    or: 1n,
    xor: 1n,
    not: -1n,
    a_binary64:   "0000000000000000000000000000000000000000000000000000000000000000",
    b_binary64:   "0000000000000000000000000000000000000000000000000000000000000001",
    and_binary64: "0000000000000000000000000000000000000000000000000000000000000000",
    or_binary64:  "0000000000000000000000000000000000000000000000000000000000000001",
    xor_binary64: "0000000000000000000000000000000000000000000000000000000000000001",
    not_binary64: "1111111111111111111111111111111111111111111111111111111111111111",
  },
  {
    a: 8n,
    b: 12n,
    and: 8n,
    or: 12n,
    xor: 4n,
    not: -9n,
    a_binary64:   "0000000000000000000000000000000000000000000000000000000000001000",
    b_binary64:   "0000000000000000000000000000000000000000000000000000000000001100",
    and_binary64: "0000000000000000000000000000000000000000000000000000000000001000",
    or_binary64:  "0000000000000000000000000000000000000000000000000000000000001100",
    xor_binary64: "0000000000000000000000000000000000000000000000000000000000000100",
    not_binary64: "1111111111111111111111111111111111111111111111111111111111110111",
  },
  {
    a: 12345n,
    b: 54321n,
    and: 4145n,
    or: 62521n,
    xor: 58376n,
    not: -12346n,
    a_binary64:   "0000000000000000000000000000000000000000000000000011000000111001",
    b_binary64:   "0000000000000000000000000000000000000000000000001101010000110001",
    and_binary64: "0000000000000000000000000000000000000000000000000001000000110001",
    or_binary64:  "0000000000000000000000000000000000000000000000001111010000111001",
    xor_binary64: "0000000000000000000000000000000000000000000000001110010000001000",
    not_binary64: "1111111111111111111111111111111111111111111111111100111111000110",
  },
  {
    a: 2147483647n,
    b: 1n,
    and: 1n,
    or: 2147483647n,
    xor: 2147483646n,
    not: -2147483648n,
    a_binary64:   "0000000000000000000000000000000001111111111111111111111111111111",
    b_binary64:   "0000000000000000000000000000000000000000000000000000000000000001",
    and_binary64: "0000000000000000000000000000000000000000000000000000000000000001",
    or_binary64:  "0000000000000000000000000000000001111111111111111111111111111111",
    xor_binary64: "0000000000000000000000000000000001111111111111111111111111111110",
    not_binary64: "1111111111111111111111111111111110000000000000000000000000000000",
  },
  {
    a: 123n,
    b: 456n,
    and: 72n,
    or: 507n,
    xor: 435n,
    not: -124n,
    a_binary64:   "0000000000000000000000000000000000000000000000000000000001111011",
    b_binary64:   "0000000000000000000000000000000000000000000000000000000111001000",
    and_binary64: "0000000000000000000000000000000000000000000000000000000001001000",
    or_binary64:  "0000000000000000000000000000000000000000000000000000000111111011",
    xor_binary64: "0000000000000000000000000000000000000000000000000000000110110011",
    not_binary64: "1111111111111111111111111111111111111111111111111111111110000100",
  },
  {
    a: 987n,
    b: 654n,
    and: 650n,
    or: 991n,
    xor: 341n,
    not: -988n,
    a_binary64:   "0000000000000000000000000000000000000000000000000000001111011011",
    b_binary64:   "0000000000000000000000000000000000000000000000000000001010001110",
    and_binary64: "0000000000000000000000000000000000000000000000000000001010001010",
    or_binary64:  "0000000000000000000000000000000000000000000000000000001111011111",
    xor_binary64: "0000000000000000000000000000000000000000000000000000000101010101",
    not_binary64: "1111111111111111111111111111111111111111111111111111110000100100",
  },
  {
    a: 0n,
    b: 0n,
    and: 0n,
    or: 0n,
    xor: 0n,
    not: -1n,
    a_binary64:   "0000000000000000000000000000000000000000000000000000000000000000",
    b_binary64:   "0000000000000000000000000000000000000000000000000000000000000000",
    and_binary64: "0000000000000000000000000000000000000000000000000000000000000000",
    or_binary64:  "0000000000000000000000000000000000000000000000000000000000000000",
    xor_binary64: "0000000000000000000000000000000000000000000000000000000000000000",
    not_binary64: "1111111111111111111111111111111111111111111111111111111111111111",
  },
  {
    a: 100000n,
    b: 10000n,
    and: 1536n,
    or: 108464n,
    xor: 106928n,
    not: -100001n,
    a_binary64:   "0000000000000000000000000000000000000000000000011000011010100000",
    b_binary64:   "0000000000000000000000000000000000000000000000000010011100010000",
    and_binary64: "0000000000000000000000000000000000000000000000000000011000000000",
    or_binary64:  "0000000000000000000000000000000000000000000000011010011110110000",
    xor_binary64: "0000000000000000000000000000000000000000000000011010000110110000",
    not_binary64: "1111111111111111111111111111111111111111111111100111100101011111",
  },
  {
    a: 200000n,
    b: 20000n,
    and: 3072n,
    or: 216928n,
    xor: 213856n,
    not: -200001n,
    a_binary64:   "0000000000000000000000000000000000000000000000110000110101000000",
    b_binary64:   "0000000000000000000000000000000000000000000000000100111000100000",
    and_binary64: "0000000000000000000000000000000000000000000000000000110000000000",
    or_binary64:  "0000000000000000000000000000000000000000000000110100111101100000",
    xor_binary64: "0000000000000000000000000000000000000000000000110100001101100000",
    not_binary64: "1111111111111111111111111111111111111111111111001111001010111111",
  },
  {
    a: 300000n,
    b: 30000n,
    and: 4384n,
    or: 325616n,
    xor: 321232n,
    not: -300001n,
    a_binary64:   "0000000000000000000000000000000000000000000001001001001111100000",
    b_binary64:   "0000000000000000000000000000000000000000000000000111010100110000",
    and_binary64: "0000000000000000000000000000000000000000000000000001000100100000",
    or_binary64:  "0000000000000000000000000000000000000000000001001111011111110000",
    xor_binary64: "0000000000000000000000000000000000000000000001001110011011010000",
    not_binary64: "1111111111111111111111111111111111111111111110110110110000011111",
  },
  {
    a: 400000n,
    b: 40000n,
    and: 6144n,
    or: 433856n,
    xor: 427712n,
    not: -400001n,
    a_binary64:   "0000000000000000000000000000000000000000000001100001101010000000",
    b_binary64:   "0000000000000000000000000000000000000000000000001001110001000000",
    and_binary64: "0000000000000000000000000000000000000000000000000001100000000000",
    or_binary64:  "0000000000000000000000000000000000000000000001101001111011000000",
    xor_binary64: "0000000000000000000000000000000000000000000001101000011011000000",
    not_binary64: "1111111111111111111111111111111111111111111110011110010101111111",
  },
  {
    a: 500000n,
    b: 50000n,
    and: 33024n,
    or: 516976n,
    xor: 483952n,
    not: -500001n,
    a_binary64:   "0000000000000000000000000000000000000000000001111010000100100000",
    b_binary64:   "0000000000000000000000000000000000000000000000001100001101010000",
    and_binary64: "0000000000000000000000000000000000000000000000001000000100000000",
    or_binary64:  "0000000000000000000000000000000000000000000001111110001101110000",
    xor_binary64: "0000000000000000000000000000000000000000000001110110001001110000",
    not_binary64: "1111111111111111111111111111111111111111111110000101111011011111",
  },
  {
    a: 600000n,
    b: 60000n,
    and: 8768n,
    or: 651232n,
    xor: 642464n,
    not: -600001n,
    a_binary64:   "0000000000000000000000000000000000000000000010010010011111000000",
    b_binary64:   "0000000000000000000000000000000000000000000000001110101001100000",
    and_binary64: "0000000000000000000000000000000000000000000000000010001001000000",
    or_binary64:  "0000000000000000000000000000000000000000000010011110111111100000",
    xor_binary64: "0000000000000000000000000000000000000000000010011100110110100000",
    not_binary64: "1111111111111111111111111111111111111111111101101101100000111111",
  },
  {
    a: 700000n,
    b: 70000n,
    and: 96n,
    or: 769904n,
    xor: 769808n,
    not: -700001n,
    a_binary64:   "0000000000000000000000000000000000000000000010101010111001100000",
    b_binary64:   "0000000000000000000000000000000000000000000000010001000101110000",
    and_binary64: "0000000000000000000000000000000000000000000000000000000001100000",
    or_binary64:  "0000000000000000000000000000000000000000000010111011111101110000",
    xor_binary64: "0000000000000000000000000000000000000000000010111011111100010000",
    not_binary64: "1111111111111111111111111111111111111111111101010101000110011111",
  },
  {
    a: 800000n,
    b: 80000n,
    and: 12288n,
    or: 867712n,
    xor: 855424n,
    not: -800001n,
    a_binary64:   "0000000000000000000000000000000000000000000011000011010100000000",
    b_binary64:   "0000000000000000000000000000000000000000000000010011100010000000",
    and_binary64: "0000000000000000000000000000000000000000000000000011000000000000",
    or_binary64:  "0000000000000000000000000000000000000000000011010011110110000000",
    xor_binary64: "0000000000000000000000000000000000000000000011010000110110000000",
    not_binary64: "1111111111111111111111111111111111111111111100111100101011111111",
  },
  {
    a: 900000n,
    b: 90000n,
    and: 72576n,
    or: 917424n,
    xor: 844848n,
    not: -900001n,
    a_binary64:   "0000000000000000000000000000000000000000000011011011101110100000",
    b_binary64:   "0000000000000000000000000000000000000000000000010101111110010000",
    and_binary64: "0000000000000000000000000000000000000000000000010001101110000000",
    or_binary64:  "0000000000000000000000000000000000000000000011011111111110110000",
    xor_binary64: "0000000000000000000000000000000000000000000011001110010000110000",
    not_binary64: "1111111111111111111111111111111111111111111100100100010001011111",
  },
  {
    a: 1000000n,
    b: 100000n,
    and: 66048n,
    or: 1033952n,
    xor: 967904n,
    not: -1000001n,
    a_binary64:   "0000000000000000000000000000000000000000000011110100001001000000",
    b_binary64:   "0000000000000000000000000000000000000000000000011000011010100000",
    and_binary64: "0000000000000000000000000000000000000000000000010000001000000000",
    or_binary64:  "0000000000000000000000000000000000000000000011111100011011100000",
    xor_binary64: "0000000000000000000000000000000000000000000011101100010011100000",
    not_binary64: "1111111111111111111111111111111111111111111100001011110110111111",
  },
  {
    a: 1100000n,
    b: 110000n,
    and: 34976n,
    or: 1175024n,
    xor: 1140048n,
    not: -1100001n,
    a_binary64:   "0000000000000000000000000000000000000000000100001100100011100000",
    b_binary64:   "0000000000000000000000000000000000000000000000011010110110110000",
    and_binary64: "0000000000000000000000000000000000000000000000001000100010100000",
    or_binary64:  "0000000000000000000000000000000000000000000100011110110111110000",
    xor_binary64: "0000000000000000000000000000000000000000000100010110010101010000",
    not_binary64: "1111111111111111111111111111111111111111111011110011011100011111",
  },
] as const;
